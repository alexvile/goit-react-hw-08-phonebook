{"version":3,"file":"static/js/811.c9fb7059.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","components/AddContactForm/AddContactForm.styled.jsx","components/AddContactForm/AddContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/EditContactForm/EditContactForm.styled.jsx","components/EditContactForm/EditContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","Pages/Phonebook/Phonebook.styled.jsx","Pages/Phonebook/Phonebook.jsx","components/Error/Error.styled.jsx","components/Error/Error.jsx"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import styled from '@emotion/styled';\n\nexport const MainForm = styled.form`\n  padding: 10px;\n  border: 1px dashed #c9c9c9;\n  border-radius: 4px;\n`;\nexport const InputWrapper = styled.div`\n  margin-bottom: 18px;\n`;\nexport const Label = styled.label`\n  display: block;\n  font-family: 'Lato', sans-serif;\n  font-weight: 400;\n  color: #000;\n  line-height: 1.2;\n  font-size: 14px;\n  margin-bottom: 4px;\n`;\nexport const Input = styled.input`\n  width: 100%;\n  font-family: 'Lato', sans-serif;\n  font-size: 13px;\n  font-weight: 400;\n  border-radius: 4px;\n  padding: 8px 12px;\n  border: 1px solid grey;\n  &:focus {\n    outline: 1px solid #42a1ec;\n  }\n`;\nexport const Button = styled.button`\n  margin-left: auto;\n  margin-right: auto;\n\n  background-image: linear-gradient(#42a1ec, #0070c9);\n  border: 1px solid #0077cc;\n  border-radius: 4px;\n  box-sizing: border-box;\n  color: #ffffff;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n\n  font-family: 'SF Pro Text', 'SF Pro Icons', 'AOS Icons', 'Helvetica Neue',\n    Helvetica, Arial, sans-serif;\n  font-size: 17px;\n  font-weight: 400;\n  letter-spacing: -0.022em;\n  line-height: 1.47059;\n  min-width: 30px;\n  overflow: visible;\n  padding: 4px 15px;\n  text-align: center;\n  vertical-align: baseline;\n  user-select: none;\n\n  &:disabled {\n    cursor: default;\n    opacity: 0.3;\n  }\n  &:hover {\n    background-image: linear-gradient(#51a9ee, #147bcd);\n    border-color: #1482d0;\n    text-decoration: none;\n  }\n  &:active {\n    background-image: linear-gradient(#3d94d9, #0067b9);\n    border-color: #006dbc;\n    outline: none;\n  }\n\n  &:focus {\n    box-shadow: rgba(131, 192, 253, 0.5) 0 0 0 3px;\n    outline: none;\n  }\n`;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TailSpin } from 'react-loader-spinner';\nimport { toast } from 'react-toastify';\n\nimport { getContacts, addContact, isAdding } from '../../redux/contactsSlice';\n\nimport { nanoid } from 'nanoid';\nimport {\n  MainForm,\n  InputWrapper,\n  Label,\n  Input,\n  Button,\n} from './AddContactForm.styled';\n\nexport default function AddContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = nanoid();\n  const phoneInputId = nanoid();\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const isPending = useSelector(isAdding);\n\n  const pushDataToArr = contact => {\n    dispatch(addContact(contact));\n    toast.success(`Contact \"${contact.name}\" has been succesfully added`);\n  };\n\n  const formSubmitHandler = data => {\n    //  check the same contact\n    const normalizedName = data.name.toLowerCase();\n\n    const isTheSame = contacts.find(\n      contact => contact.name.toLowerCase() === normalizedName\n    );\n\n    if (isTheSame) {\n      toast.warning(`Contact \"${isTheSame.name}\" is already in contacts`);\n      return;\n    }\n    pushDataToArr(data);\n    formReset();\n  };\n\n  const handleChange = e => {\n    switch (e.currentTarget.name) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n\n      case 'number':\n        setNumber(e.currentTarget.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const formReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    formSubmitHandler({ name, number });\n  };\n\n  return (\n    <MainForm onSubmit={handleSubmit}>\n      <InputWrapper>\n        <Label htmlFor={nameInputId}>Name</Label>\n        <Input\n          id={nameInputId}\n          onChange={handleChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </InputWrapper>\n\n      <InputWrapper>\n        <Label htmlFor={phoneInputId}>Phone</Label>\n        <Input\n          id={phoneInputId}\n          onChange={handleChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </InputWrapper>\n\n      <Button type=\"submit\" disabled={isPending}>\n        <span>Add contact</span>\n        {isPending && (\n          <TailSpin\n            height=\"20\"\n            width=\"20\"\n            color=\"#e3e4ed\"\n            ariaLabel=\"tail-spin-loading\"\n            radius=\"1\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n          />\n        )}\n      </Button>\n    </MainForm>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  padding: 10px;\n  border: 1px dashed #c9c9c9;\n  border-radius: 4px;\n`;\nexport const Label = styled.label`\n  display: block;\n  font-family: 'Lato', sans-serif;\n  font-weight: 400;\n  color: #000;\n  line-height: 1.2;\n  font-size: 18px;\n  margin-bottom: 4px;\n`;\nexport const Input = styled.input`\n  width: 100%;\n  font-family: 'Lato', sans-serif;\n  font-size: 13px;\n  font-weight: 400;\n  border-radius: 4px;\n  padding: 8px 12px;\n  border: 1px solid grey;\n  &:focus {\n    outline: 1px solid #42a1ec;\n  }\n`;\nexport const FindLabel = styled.span`\n  display: block;\n  margin-bottom: 6px;\n  font-size: 14px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter, getFilter } from '../../redux/contactsSlice';\n\nimport { Form, Label, Input, FindLabel } from './Filter.styled';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <Form>\n      <Label>\n        <FindLabel>Find contacts by name</FindLabel>\n        <Input type=\"text\" value={filter} onChange={onChange} />\n      </Label>\n    </Form>\n  );\n};\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const Card = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n  &:before {\n    position: absolute;\n    content: '';\n    display: block;\n    width: 20px;\n    height: 20px;\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' version='1.1' id='logo_x5F_contacts_x5F_192px_1_' x='0px' y='0px' viewBox='0 0 500 500' enable-background='new 0 0 500 500' xml:space='preserve'%3E%3Cg id='art_layer'%3E%3Ccircle id='bg_circle' fill='%231A73E8' cx='250' cy='250' r='250'/%3E%3Cpath id='body_shadow' fill='%23185ABC' d='M332.4,375H170.5c-19.6,0-36.9-11.8-36.9-31.2V358c0,19.4,17.3,34.1,36.9,34.1h161.9 c19.6,0,36.9-14.7,36.9-34.1v-14.2C369.3,363.2,352,375,332.4,375z'/%3E%3Cpath id='head_shadow' fill='%23185ABC' d='M250,227.3c-29.3-0.1-52.4-20.4-54-48.3v11.4c0,28.9,24.2,54,54,54s54-25.1,54-54V179 C301.7,207.1,279.3,227.4,250,227.3z'/%3E%3Cg id='subject'%3E%3Cpath id='body' fill='%23FFFFFF' d='M250,261.4c-57,0-116.5,27.8-116.5,65.3v17c0,19.4,15.9,34.1,35.5,34.1h164.7 c19.6,0,35.5-14.7,35.5-34.1v-17C369.3,289.1,307,261.4,250,261.4z'/%3E%3Ccircle id='head' fill='%23FFFFFF' cx='250' cy='176.1' r='54'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");\n  }\n`;\nexport const CardText = styled.div`\n  margin-right: 20px;\n  padding-left: 30px;\n`;\n\nexport const Buttons = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const DeleteBtn = styled.button`\n  background-image: linear-gradient(#42a1ec, #0070c9);\n  border: 1px solid #0077cc;\n  border-radius: 4px;\n  box-sizing: border-box;\n  color: #ffffff;\n  cursor: pointer;\n  display: block;\n  font-family: 'SF Pro Text', 'SF Pro Icons', 'AOS Icons', 'Helvetica Neue',\n    Helvetica, Arial, sans-serif;\n  font-size: 12px;\n  font-weight: 400;\n  letter-spacing: -0.022em;\n  line-height: 1;\n  min-width: 30px;\n  overflow: visible;\n  padding: 4px 15px;\n  text-align: center;\n  user-select: none;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  height: 34px;\n  &:disabled {\n    cursor: default;\n    opacity: 0.3;\n  }\n  &:hover {\n    background-image: linear-gradient(#51a9ee, #147bcd);\n    border-color: #1482d0;\n    text-decoration: none;\n  }\n  &:active {\n    background-image: linear-gradient(#3d94d9, #0067b9);\n    border-color: #006dbc;\n    outline: none;\n  }\n\n  &:focus {\n    box-shadow: rgba(131, 192, 253, 0.5) 0 0 0 3px;\n    outline: none;\n  }\n`;\n\nexport const EditContainer = styled.div`\n  min-width: 400px;\n  padding: 15px;\n  position: relative;\n`;\nexport const CloseModal = styled.button`\n  margin-left: auto;\n  cursor: pointer;\n  position: absolute;\n  right: 10px;\n  border: none;\n  background-color: transparent;\n  &:hover svg {\n    fill: #ed282d;\n  }\n  svg {\n    width: 18px;\n    height: 18px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\nexport const Content = styled.div`\n  background-color: white;\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Overlay, Content } from './Modal.styled';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.getElementById('modal-root');\n\nexport default function Modal({ onClose, children }) {\n  useEffect(() => {\n    const closeModal = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', closeModal);\n\n    return () => {\n      window.removeEventListener('keydown', closeModal);\n    };\n  }, [onClose]);\n\n  const closeByClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={closeByClick}>\n      <Content>{children}</Content>\n    </Overlay>,\n    modalRoot\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  text-align: center;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { getContacts } from 'redux/contactsSlice';\nimport { updateContact } from 'redux/contactsSlice';\nimport {\n  MainForm,\n  InputWrapper,\n  Label,\n  Input,\n  Button,\n} from '../AddContactForm/AddContactForm.styled';\nimport { Title } from './EditContactForm.styled';\nexport const EditContactForm = ({\n  contactName,\n  contactNumber,\n  contactId,\n  onClose,\n}) => {\n  const contacts = useSelector(getContacts);\n\n  const dispatch = useDispatch();\n  const [name, setName] = useState(contactName);\n  const [number, setNumber] = useState(contactNumber);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'number':\n        return setNumber(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // console.log(e);\n    const nameValue = { name }.name;\n\n    //  check the same contact\n    const normalizedName = nameValue.toLowerCase();\n    const isTheSame = contacts.find(\n      contact => contact.name.toLowerCase() === normalizedName\n    );\n    if (isTheSame) {\n      toast.warning(`Contact \"${isTheSame.name}\" is already in contacts`);\n      return;\n    }\n\n    dispatch(updateContact({ id: contactId, name, number }));\n    toast.success(`Contact \"${nameValue}\" has been succesfully edited`);\n    onClose();\n    // resetForm();\n  };\n  return (\n    <>\n      <Title>Edit contact</Title>\n      <MainForm onSubmit={handleSubmit}>\n        <InputWrapper>\n          <Label>Name</Label>\n          <Input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n        </InputWrapper>\n        <InputWrapper>\n          <Label>Phone</Label>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n          />\n        </InputWrapper>\n        <Button type=\"submit\">Edit</Button>\n      </MainForm>\n    </>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { TailSpin } from 'react-loader-spinner';\n\nimport { AiOutlineDelete, AiFillEdit, AiOutlineClose } from 'react-icons/ai';\n\nimport { deleteContact } from '../../redux/contactsSlice';\nimport { isDeleting, isUpdating } from '../../redux/contactsSlice';\n\nimport {\n  Card,\n  CardText,\n  DeleteBtn,\n  Buttons,\n  EditContainer,\n  CloseModal,\n} from './ContactItem.styled';\nimport Modal from 'components/Modal/Modal';\nimport { EditContactForm } from 'components/EditContactForm/EditContactForm';\n\nconst ContactItem = ({ id, name, number }) => {\n  const [modal, setModal] = useState(false);\n  const toggleModal = () => {\n    setModal(!modal);\n  };\n\n  const dispatch = useDispatch();\n  const isPending = useSelector(isDeleting);\n  const isUpdatingContact = useSelector(isUpdating);\n\n  const removeContact = (toDeleteId, name) => {\n    dispatch(deleteContact(toDeleteId));\n    toast.success(`Contact \"${name}\" has been succesfully deleted`);\n  };\n\n  return (\n    <Card>\n      <CardText>\n        <span>{name}: </span>\n        <span>{number}</span>\n      </CardText>\n      <Buttons>\n        <DeleteBtn\n          type=\"button\"\n          onClick={toggleModal}\n          disabled={isUpdatingContact}\n        >\n          <span>Edit&nbsp;</span>\n          <AiFillEdit />\n        </DeleteBtn>\n        <DeleteBtn\n          type=\"button\"\n          disabled={isPending}\n          onClick={() => removeContact(id, name)}\n        >\n          {isPending ? (\n            <TailSpin\n              height=\"12\"\n              width=\"12\"\n              color=\"#e3e4ed\"\n              ariaLabel=\"tail-spin-loading\"\n              radius=\"1\"\n              wrapperStyle={{}}\n              wrapperClass=\"\"\n              visible={true}\n            />\n          ) : (\n            <AiOutlineDelete />\n          )}\n        </DeleteBtn>\n      </Buttons>\n\n      {modal && (\n        <Modal onClose={toggleModal}>\n          <EditContainer>\n            <CloseModal onClick={toggleModal}>\n              <AiOutlineClose />\n            </CloseModal>\n            <EditContactForm\n              contactName={name}\n              contactNumber={number}\n              contactId={id}\n              onClose={toggleModal}\n            />\n          </EditContainer>\n        </Modal>\n      )}\n    </Card>\n  );\n};\nexport default ContactItem;\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin-top: 12px;\n  padding-left: 5px;\n  padding-right: 5px;\n`;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts, getFilter, isLoading } from '../../redux/contactsSlice';\nimport { fetchContacts } from '../../redux/contactsSlice';\n\nimport { Loader } from 'components/Loader/Loader';\n\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport { List } from './ContactList.styled';\nimport pandaImg from 'images/panda-laptop.png';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    //  let ignore = false;\n    // console.log('useEffect');\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const isPending = useSelector(isLoading);\n  const contacts = useSelector(getContacts);\n\n  const reduxFilter = useSelector(getFilter);\n  const normalizedFilter = reduxFilter.toLowerCase();\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <List>\n      {isPending && <Loader />}\n      {filteredContacts.length > 0 &&\n        filteredContacts.map(({ id, name, number }) => {\n          return <ContactItem key={id} id={id} name={name} number={number} />;\n        })}\n      {filteredContacts.length === 0 && (\n        <div>\n          <p>You haven't any contact yet...</p>\n          <div>\n            <img src={pandaImg} width=\"128\" alt=\"Panda\" />\n          </div>\n        </div>\n      )}\n    </List>\n  );\n};\nexport default ContactList;\n","import styled from '@emotion/styled';\nexport const Wrapper = styled.div`\n  padding: 10px 40px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 22px;\n  margin-top: 6px;\n`;\nexport const Subitle = styled.h2`\n  margin-top: 12px;\n  margin-bottom: 6px;\n  font-size: 20px;\n`;\n","import { useSelector } from 'react-redux';\n\nimport AddContactForm from 'components/AddContactForm/AddContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport { Wrapper, Title, Subitle } from './Phonebook.styled';\nimport { errorMessage } from 'redux/contactsSlice';\nimport { Error } from 'components/Error/Error';\n\nconst Phonebook = () => {\n  const error = useSelector(errorMessage);\n  return (\n    <Wrapper>\n      {error ? (\n        <Error>{error}</Error>\n      ) : (\n        <>\n          <Title>Phonebook</Title>\n          <AddContactForm />\n          <Subitle>Contacts</Subitle>\n          <Filter />\n          <ContactList />\n        </>\n      )}\n    </Wrapper>\n  );\n};\nexport default Phonebook;\n","import styled from '@emotion/styled';\nexport const ErrorWrapper = styled.div`\n  padding: 40px;\n`;\n","import { ErrorWrapper } from './Error.styled';\nimport pandaImg from 'images/sad-panda.png';\n\nexport const Error = ({ children, addMessage = null }) => {\n  let isStatus400 = false;\n\n  if (children.includes('400')) {\n    isStatus400 = true;\n  } else {\n    isStatus400 = false;\n  }\n  return (\n    <ErrorWrapper>\n      {isStatus400 ? (\n        <div>\n          <h1>Ups, something went wrong</h1>\n          {addMessage && <p>{addMessage}</p>}\n          <p>Erorr message:</p>\n          <p>{children}</p>\n        </div>\n      ) : (\n        <div>\n          <h1>Ups, something went wrong</h1>\n          <p>Please try again later</p>\n          <p>Erorr message:</p>\n          <p>{children}</p>\n        </div>\n      )}\n      <div>\n        <img src={pandaImg} width=\"200\" alt=\"Sad panda\" />\n      </div>\n    </ErrorWrapper>\n  );\n};\n"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","MainForm","styled","InputWrapper","Label","Input","Button","AddContactForm","useState","name","setName","number","setNumber","nameInputId","phoneInputId","dispatch","useDispatch","contacts","useSelector","getContacts","isPending","isAdding","formSubmitHandler","data","contact","normalizedName","toLowerCase","isTheSame","find","toast","addContact","formReset","handleChange","e","currentTarget","value","onSubmit","preventDefault","htmlFor","onChange","type","pattern","title","required","disabled","height","width","color","ariaLabel","radius","wrapperStyle","wrapperClass","visible","Form","FindLabel","filter","getFilter","setFilter","Card","CardText","Buttons","DeleteBtn","EditContainer","CloseModal","Overlay","Content","modalRoot","document","getElementById","Modal","onClose","children","useEffect","closeModal","code","window","addEventListener","removeEventListener","createPortal","onClick","target","Title","EditContactForm","contactName","contactNumber","contactId","nameValue","updateContact","modal","setModal","toggleModal","isDeleting","isUpdatingContact","isUpdating","toDeleteId","deleteContact","removeContact","List","fetchContacts","isLoading","normalizedFilter","filteredContacts","includes","Loader","length","map","src","pandaImg","alt","Wrapper","Subitle","error","errorMessage","Error","ErrorWrapper","addMessage","isStatus400"],"sourceRoot":""}